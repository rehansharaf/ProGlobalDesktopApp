/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.Timer;

import java.awt.Dimension;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Rehan
 */
public class ProcessingFilePopup extends javax.swing.JDialog {

	private static String serviceType;
	Timer timer;
	static int waitCondition = 0;
	/**
     * Creates new form ProcessingFilePopup
     * @throws SQLException 
     * @throws ClassNotFoundException 
     */
    public ProcessingFilePopup(String serviceType) throws ClassNotFoundException, SQLException {
		
    	setResizable(false);
    	this.setModal(true);
    	this.serviceType = serviceType;
    	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws SQLException 
     * @throws ClassNotFoundException 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws ClassNotFoundException, SQLException {

        jLabel1 = new javax.swing.JLabel();
        processingRefresh = new javax.swing.JButton();
        processingClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setPreferredSize(new Dimension(60, 60));
        jScrollPane1.setSize(new Dimension(60, 60));
        jScrollPane1.setMinimumSize(new Dimension(60, 60));
        jTextPane1 = new javax.swing.JTextPane();
        jTextPane1.setPreferredSize(new Dimension(100, 100));
        jTextPane1.setMinimumSize(new Dimension(60, 60));
        
        StyledDocument doc = jTextPane1.getStyledDocument();
        SimpleAttributeSet center = new SimpleAttributeSet();
        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), center, false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Processing File Details");
        
        if(waitCondition == 1) {
        	
        	processingRefresh.setEnabled(false);
        	processingRefresh.setText("Wait 1 min");
        }else 	
        	processingRefresh.setText("Refresh");
//        processingRefresh.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                try {
//                	getDBResults();
//				} catch (ClassNotFoundException | SQLException e) {
//					e.printStackTrace();
//				}
//            }
//        });
      
      int delay = 60000; //milliseconds
  	  timer = new Timer(delay, new ActionListener() {
  	      public void actionPerformed(ActionEvent evt) {
  	    	  processingRefresh.setEnabled(true);
  	    	  processingRefresh.setText("Refresh");
  	    	  waitCondition = 0;
  	    	  timer.stop();
  	      }
  	  });
  	  timer.setRepeats(false);
        
      processingRefresh.addActionListener(new java.awt.event.ActionListener() {
    	  
      public void actionPerformed(java.awt.event.ActionEvent evt) {

          try {
          	getDBResults();
          	JButton button = ((JButton)evt.getSource());
            button.setEnabled(false);
            button.setText("Wait 1 min");
            timer.start();
            waitCondition = 1;
            
			} catch (ClassNotFoundException | SQLException e) {
				e.printStackTrace();
			}
      }
  });
        
     
      
        processingClose.setText("Close");
        processingClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        processingClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	processingCloseActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPane1);
        jTextPane1.setEditable(false);
        getDBResults();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(93)
        			.addComponent(processingRefresh)
        			.addContainerGap(238, Short.MAX_VALUE))
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap(191, Short.MAX_VALUE)
        			.addComponent(processingClose, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
        			.addGap(105))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(14)
        			.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        			.addGap(14))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(129)
        			.addComponent(jLabel1)
        			.addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(70)
        			.addComponent(jLabel1)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 119, GroupLayout.PREFERRED_SIZE)
        			.addGap(25)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(processingRefresh)
        				.addComponent(processingClose))
        			.addContainerGap(42, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        


    
    
    public void getDBResults() throws ClassNotFoundException, SQLException {
    	
    	if(waitCondition == 0) {
         
	    	DBQueries dbquery = new DBQueries();
	
	    	if(serviceType.equals("InjuredWorker")) {
	    		String filename = dbquery.getDetailsInjuredWorker(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("candrEvents")) {
	    		String filename = dbquery.getDetailsCandR(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("ConexemDataFetchAll")) {
	    		String filename = dbquery.getDetailsConexemDataFetchAll(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("ConexemDataFetchDesert")) {
	    		String filename = dbquery.getDetailsConexemDataFetchDesert(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("ConexemDetailFetchRFA")) {
	    		String filename = dbquery.getDetailsConexemDataFetchRFA(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("FetchHearing1")) {
	    		String filename = dbquery.getDetailsFetchHearing1(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("DocucentRequest")) {
	    		String filename = dbquery.getDetailsDocucent(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("DocMerging")) {
	    		String filename = dbquery.getDetailsDocMerging(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("DocucentPOS")) {
	    		String filename = dbquery.getDetailsDocucentPOS(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("DocsDownloadDDM")) {
	    		String filename = dbquery.getDetailsDocsDownloadDDM(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("SBRDocRequest")) {
	    		String filename = dbquery.getDetailsSBRRequest(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("SupDecRequest")) {
	    		String filename = dbquery.getDetailsSupDecRequest(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("SupDecAllParty")) {
	    		String filename = dbquery.getDetailsSupDecAllParty(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("SupDecAllParty2")) {
	    		String filename = dbquery.getDetailsSupDecAllParty2(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("ResizePDF")) {
	    		String filename = dbquery.getDetailsResizePDF(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("RuntimeHCFA")) {
	    		String filename = dbquery.getDetailsRuntimeHCFA(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("RuntimeHCFA_AllStudy")) {
	    		String filename = dbquery.getDetailsRuntimeHCFA_AllStudy(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("RuntimeInterpretingBill")) {
	    		String filename = dbquery.getDetailsRuntimeInterpretingBill(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("RuntimeLedger")) {
	    		String filename = dbquery.getDetailsRuntimeLedger(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("RuntimeLedger_AllStudy")) {
	    		String filename = dbquery.getDetailsRuntimeLedger_AllStudy(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("GetPDFPageNo")) {
	    		String filename = dbquery.getDetailsGetPDFPageNo(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("InterpretingBill_CopyRecord_ML")) {
	    		String filename = dbquery.getDetailsInterpretingBill_CopyRecord_ML(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("LienFileStatus")) {
	    		String filename = dbquery.getDetailsLienFileStatus(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("LienClaimantProvOnly")) {
	    		String filename = dbquery.getDetailsLienClaimantProvOnly(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("MedflowDocsDownload")) {
	    		String filename = dbquery.getDetailsMedflowDocsDownload(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("PDFValidity")) {
	    		String filename = dbquery.getDetailsPDFValidity(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("FetchHearingReq2")) {
	    		String filename = dbquery.getDetailsFetchHearingReq2(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("HearingTestReq")) {
	    		String filename = dbquery.getDetailsHearingTestReq(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("HearingTestReq2")) {
	    		String filename = dbquery.getDetailsHearingTestReq2(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("RequestDocName_Docucent")){
	    		String filename = dbquery.getDetailsRequestDocNameDocucent(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("bulkEmail")){
	    		String filename = dbquery.getDetailsBulkEmail(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("Conexem_CandRPosting")) {
	    		String filename = dbquery.getDetailsConexemCandRPosting(serviceType);
		    	jTextPane1.setText(filename);
	    	}else if(serviceType.equals("Ringcentral_FaxReceipt")) {
	    		String filename = dbquery.getDetailsFaxReceiptDownload(serviceType);
		    	jTextPane1.setText(filename);
	    	}
	
	    	
	    	//dbquery.closeDBConnection();
    	
    	}else {
    		
	    	jTextPane1.setText("Wait For 1 min to check new status");

    	}
    	
    }
    

    private void processingCloseActionPerformed(java.awt.event.ActionEvent evt) {                                                  

    	this.dispose();
    	
    } 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessingFilePopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessingFilePopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessingFilePopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessingFilePopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
					new ProcessingFilePopup(serviceType).setVisible(true);
				} catch (ClassNotFoundException | SQLException e) {
					e.printStackTrace();
				}
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton processingClose;
    private static javax.swing.JButton processingRefresh;
    // End of variables declaration                   
}
