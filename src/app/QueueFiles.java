/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.SQLException;

import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;

import org.apache.commons.net.ftp.FTPFile;

import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JButton;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.event.ActionListener;

/**
 *
 * @author Rehan
 */
public class QueueFiles extends javax.swing.JDialog {

	private static String host;
	private static String user;
	private static String pass;
	private static String service;
	
    /**
     * Creates new form DownloadFrame
     * @throws IOException 
     */
    public QueueFiles(String host, String user, String pass, String service) throws IOException {
    	setResizable(false);
    
    			this.host = host;
    			this.user = user;
    			this.pass = pass;
    			this.service = service;
    			
                initComponents();
                getAllFiles();
           
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	this.setModal(true);
        jScrollPane1 = new javax.swing.JScrollPane();
        
        jDownloadList = new javax.swing.JTable();



        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jDownloadList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jDownloadList);
        
        JButton btnRefresh = new JButton("Refresh");
        btnRefresh.addActionListener(new ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		try {
					processingRefreshActionPerformed(evt);
				} catch (IOException e) {
					e.printStackTrace();
				}
        	}
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(164)
        			.addComponent(btnRefresh)
        			.addContainerGap(174, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        			.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(btnRefresh))
        );
        getContentPane().setLayout(layout);

        pack();
        setLocationRelativeTo(null);
        
//        jDownloadList.addMouseListener(new MouseAdapter() {
//        	@Override
//        	public void mouseClicked(MouseEvent e) {}
//        });
        
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        jDownloadList.setModel(model);
        
    }// </editor-fold>                        

    public void processingRefreshActionPerformed(ActionEvent evt) throws IOException {

        DefaultTableModel model = (DefaultTableModel)jDownloadList.getModel();
        while(model.getRowCount() > 0)
        {
        	model.removeRow(0);
        }
        
    	GetAllFiles getAll = new GetAllFiles();
    	FTPFile[] files = getAll.getAllFilesFromFolder("/"+service,host,user,pass);

       //DefaultTableModel model = (DefaultTableModel)jDownloadList.getModel();
        model.setColumnIdentifiers(new String[] {"File Names"});
        Object[] row = new Object[1];
        
        for(FTPFile file : files) {
        	
        	row[0] = file.getName();
            model.addRow(row);
        }
        
        
    
	}

	/**
     * @param args the command line arguments
     * @throws IOException 
     */
    
    
    
    public void getAllFiles() throws IOException {
        
    	GetAllFiles getAll = new GetAllFiles();
    	FTPFile[] files = getAll.getAllFilesFromFolder("/"+service,host,user,pass);
        //File f1 = new File("C:\\FTPDownload\\");
        //File[] listFile = f1.listFiles();
        DefaultTableModel model = (DefaultTableModel)jDownloadList.getModel();
        model.setColumnIdentifiers(new String[] {"File Names"});
        Object[] row = new Object[1];
        /*for(int i = 0; i < listFile.length; i++) {
            
            row[0] = listFile[i];
            model.addRow(row);
        }*/
        
        for(FTPFile file : files) {
        	
        	row[0] = file.getName();
            model.addRow(row);
        }
        
        
    }
    
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueueFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueueFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueueFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueueFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
					new QueueFiles(host, user, pass, service).setVisible(true);
				} catch (IOException e) {
					e.printStackTrace();
				}
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTable jDownloadList;
    private javax.swing.JScrollPane jScrollPane1;
}
